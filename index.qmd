---
title: "Environmental & species data"
subtitle: "Climate, soil, landscape, taxonomy, phylogeny & functional"
author: "Sylvain Schmitt"
institute: CIRAD
date: today
date-format: medium
format: 
  revealjs:
    theme: dark
    output-location: fragment
    slide-number: true
    logo: figures/logo.png
    transition: fade
    preview-links: true
    chalkboard: true
bibliography: references.bib
include-in-header:
  - text: |
      <style>
      .reveal .slide-logo {
        max-height: unset;
        height: 75px;
      }
      </style>
---

```{r set}
#| message: false
#| include: false
library(tidyverse)
library(sf)
library(leaflet)
library(units)
library(ggdark)
library(ggfortify)
library(knitr)
library(ape)
library(phylobase)
library(ggtree)
```

# Environment

**environment** is a sub-project of the [**BioForest**](https://github.com/Bioforest-project) project aimed at gathering environmental variables of climate ([TerraClimate](https://www.climatologylab.org/terraclimate.html)), soil ([SoilGrids](https://www.isric.org/explore/soilgrids)) and landscape ([TMF](https://forobs.jrc.ec.europa.eu/TMF)) for data preparation within the project.

## Sites

```{r map}
#| message: false
#| warning: false
#| fig-cap: "Sites and plots locations."
read_tsv("../environment/data/derived_data/sites.tsv") %>%
  st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
  leaflet() %>%
  addTiles() %>%
  addProviderTiles("Esri.WorldImagery", group = "ESRI") %>%
  addMarkers(
    label = ~ paste(site, plot),
    labelOptions = labelOptions(noHide = FALSE)
  )
```

## Surface

```{r sitesarea}
#| message: false
#| warning: false
#| fig-cap: "Number of sites and total plots surface."
read_tsv("../environment/data/derived_data/sites.tsv") %>%
  st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
  group_by(site) %>%
  summarise(n = n()) %>%
  st_convex_hull() %>%
  mutate(area = as.numeric(set_units(st_area(.), "km^2"))) %>%
  st_drop_geometry() %>%
  ggplot(aes(n, area)) +
  geom_point() +
  xlab("Number of plots") +
  ylab(expression(paste("Area [", km^2, "]"))) +
  ggrepel::geom_text_repel(aes(label = site), color = "white") +
  dark_theme_gray() +
  theme(plot.background = element_rect(fill = "grey10", color = NA)) +
  scale_y_sqrt()
```

# Climate

[TerraClimate](https://www.climatologylab.org/terraclimate.html) is a dataset of **monthly** & **\~4-km (1/24th degree**)climate and climatic **water balance** for global terrestrial surfaces from **1958-2019** [@abatzoglou2018].

## Monthly variables

-   ET: Actual evapotranspiration, mm
-   CWD: Climate water deficit, mm
-   Tmax: Maximum temperature, °C
-   Tmin: Minimum temperature, °C
-   PDSI: Palmer Drought Severity Index
-   PET: Potential evapotranpiration, mm
-   Pr: precipitation, mm
-   Soil: Soil humidity, mm
-   VPD: Vapour Pressure Deficit, kPa

## Ombrothermal

```{r umbrothermal}
#| message: false
#| warning: false
#| fig-cap: "Umbrothermal diagrams for the mean climate of each site."
read_tsv("../environment/data/derived_data/climate_month.tsv") %>%
  filter(site != "Uppangala") %>%
  group_by(site, month) %>%
  summarise_all(mean) %>%
  ggplot(aes(x = month)) +
  geom_col(aes(y = pr / 10, fill = pr <= 100), col = NA) +
  geom_line(aes(y = tmmn, col = "maximum"), linewidth = 1.1) +
  geom_line(aes(y = tmmx, col = "minimum"), linewidth = 1.1) +
  xlab("") +
  scale_x_continuous(
    breaks = 1:12,
    labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")
  ) +
  scale_y_continuous(
    name = "Temperature (°C)",
    sec.axis = sec_axis(trans = ~ . * 10, name = "Precipitation (mm)")
  ) +
  scale_color_manual(guide = "none", values = c("#5a6bff", "#ff5a5a")) +
  facet_wrap(~site) +
  scale_fill_manual(guide = "none", values = c("darkgrey", "white")) +
  dark_theme_gray() +
  theme(plot.background = element_rect(fill = "grey10", color = NA))
```

## Ombrothermal Uppangala

```{r umbrothermal_uppangala}
#| message: false
#| warning: false
#| fig-cap: "Umbrothermal diagrams for the mean climate of Uppangala."
read_tsv("../environment/data/derived_data/climate_month.tsv") %>%
  filter(site == "Uppangala") %>%
  group_by(site, month) %>%
  summarise_all(mean) %>%
  ggplot(aes(x = month)) +
  geom_col(aes(y = pr / 10, fill = pr < 100), col = NA) +
  geom_line(aes(y = tmmn, col = "maximum"), linewidth = 1.1) +
  geom_line(aes(y = tmmx, col = "minimum"), linewidth = 1.1) +
  xlab("") +
  scale_x_continuous(
    breaks = 1:12,
    labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")
  ) +
  scale_y_continuous(
    name = "Temperature (°C)",
    sec.axis = sec_axis(trans = ~ . * 10, name = "Precipitation (mm)")
  ) +
  scale_color_manual(guide = "none", values = c("#5a6bff", "#ff5a5a")) +
  facet_wrap(~site) +
  scale_fill_manual(guide = "none", values = c("darkgrey", "white")) +
  dark_theme_gray() +
  theme(plot.background = element_rect(fill = "grey10", color = NA))
```

## Yearly metrics {.smaller}

-   CWD: Climate water deficit, mm, mean across years of the sum of monthly CWD
-   ET: Evapotranspiration, mm, mean across years of the sum of monthly ET
-   Pr: Precipitation, mm, mean across years of the sum of monthly Pr
-   Soil: Soil humidity, mm, mean across years of the minimum of monthly soil humidity
-   VPD: Vapour Pressure Deficit, kPa, mean across years of the maximum of monthly VPD
-   Tmax: Maximum temperature, °C, mean across years of the maximum of monthly Tmax
-   DSL: Dry season length, days, mean across years of the number of month with ET\>Pr multiplied by 30
-   DSI: Dry season intensity, mm, mean across years of the sum of ET-Pr for month with ET\>Pr

## Metrics

```{r metricssoil}
#| message: false
#| warning: false
#| fig-cap: "Yearly mean climate variables per site."
read_tsv("../environment/data/derived_data/climate_year.tsv") %>%
  gather(variable, value, -site, -plot) %>%
  mutate(var_long = recode(variable,
    "et" = "Evapotranspiration [ mm ]",
    "cwd" = "Climate water deficit [ mm ]",
    "pr" = "Precipitation [ mm ]",
    "tmax" = "Max temperature [ °C ]",
    "vpd" = "Max VPD [ kPA ]",
    "soil" = "Min soil humidity [ mm ]",
    "dsi" = "Dry season intensity [ mm ]",
    "dsl" = "Dry season length [ day ]"
  )) %>%
  ggplot(aes(site, value, fill = site, group = paste(site, plot))) +
  geom_col(position = "dodge") +
  facet_wrap(~var_long, scales = "free_y") +
  dark_theme_gray() +
  theme(
    legend.position = "right", axis.title = element_blank(),
    axis.text.x = element_blank(),
    legend.background = element_rect(fill = "grey10", color = NA),
    plot.background = element_rect(fill = "grey10", color = NA)
  ) +
  scale_fill_discrete("")
```

## Co-variations

```{r pcasoil}
#| message: false
#| warning: false
#| fig-cap: "Yearly mean climate variables PCA per site and plot."
data <- read_tsv("../environment/data/derived_data/climate_year.tsv")
pca <- prcomp(data %>% select(-site, -plot), scale. = TRUE)
autoplot(pca,
  loadings = TRUE, loadings.label = TRUE,
  loadings.label.repel = TRUE,
  data = data, colour = "site"
) +
  scale_color_discrete("") +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA)
  )
```

## Correlations

```{r corrsoil}
#| message: false
#| warning: false
#| fig-cap: "Climate variables pairwise correlations."
par(bg = "grey10")
read_tsv("../environment/data/derived_data/climate_year.tsv") %>%
  select(-site, -plot) %>%
  cor(use = "pairwise.complete.obs") %>%
  corrplot::corrplot(
    type = "upper", diag = FALSE,
    bg = "grey10", tl.col = "white"
  )
```

# Soil

[SoilGrids](https://www.isric.org/explore/soilgrids) are global **soil property** maps at **six standard depth** intervals (according to the GlobalSoilMap IUSS working group and its specifications) at a spatial resolution of **250 meters** [@poggio2021]. I focused on the **two top horizons (0-15cm)** revealing most inter-site variations (V. Freycon pers. com.).

## Variables {.smaller}

-   Clay: Proportion of clay particles (\< 0.002 mm) in the fine earth fraction, %
-   Sand: Proportion of sand particles (\> 0.05 mm) in the fine earth fraction, %
-   Silt: Proportion of silt particles (≥ 0.002 mm and ≤ 0.05 mm) in the fine earth fraction, %
-   BD: Bulk density of the fine earth fraction, kg dm³
-   CEC: Cation Exchange Capacity of the soil, cmolC kg^-1^
-   CF: Volumetric fraction of coarse fragments (\> 2 mm), cm^3^ 100cm^-3^
-   N: Total nitrogen, g kg^-1^
-   pH: Soil pH
-   SOC: Soil organic carbon content in the fine earth fraction, g kg^-1^
-   OCD: Organic carbon density, kg dm³
-   OCS: Organic carbon stocks, kg m^2^

## Paracou

```{r par_soil}
#| message: false
#| warning: false
#| fig-cap: "Soil data variation with depth at Paracou across plots."
read_tsv("../environment/data/derived_data/soil.tsv") %>%
  filter(site == "Paracou") %>%
  select(-X, -Y, -site, -ocs) %>%
  gather(variable, value, -plot, -depth) %>%
  mutate(var_long = recode(variable,
    "bdod" = '"BD ["~kg~dm^{-3}~"]"',
    "cec" = '"CEC ["~cmol~kg^{-1}~"]"',
    "cfvo" = '"CF ["~cm^3~"100"~cm^{-3}~"]"',
    "clay" = '"Clay ["~"%"~"]"',
    "nitrogen" = '"N ["~g~kg^{-1}~"]"',
    "ocd" = '"OCD ["~kg~dm^{3}~"]"',
    "phh2o" = "pH",
    "sand" = '"Sand ["~"%"~"]"',
    "silt" = '"Silt ["~"%"~"]"',
    "soc" = '"SOC ["~g~kg^{-1}~"]"'
  )) %>%
  ggplot(aes(depth, value, group = as.character(plot))) +
  geom_line() +
  facet_wrap(~var_long, scales = "free_y", labeller = label_parsed) +
  ylab("") +
  xlab("Depth [ m ]") +
  scale_x_log10() +
  ggtitle("Paracou") +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA)
  )
```

## All

```{r allplot5}
#| message: false
#| warning: false
#| fig-cap: "Mean soil data per site for top horizon (up to 15cm)."
read_tsv("../environment/data/derived_data/soil.tsv") %>%
  select(-X, -Y, -plot) %>%
  group_by(site) %>%
  filter(depth <= 15) %>%
  summarise_all(mean, na.omit = TRUE) %>%
  gather(variable, value, -site, -depth) %>%
  na.omit() %>%
  mutate(var_long = recode(variable,
    "bdod" = '"BD ["~kg~dm^{-3}~"]"',
    "cec" = '"CEC ["~cmol~kg^{-1}~"]"',
    "cfvo" = '"CF ["~cm^3~"100"~cm^{-3}~"]"',
    "clay" = '"Clay ["~"%"~"]"',
    "nitrogen" = '"N ["~g~kg^{-1}~"]"',
    "ocd" = '"OCD ["~kg~dm^{3}~"]"',
    "ocs" = '"OCS ["~kg~m^{-2}~"]"',
    "phh2o" = "pH",
    "sand" = '"Sand ["~"%"~"]"',
    "silt" = '"Silt ["~"%"~"]"',
    "soc" = '"SOC ["~g~kg^{-1}~"]"'
  )) %>%
  ggplot(aes(site, value, fill = site)) +
  geom_col(aes(group = as.factor(depth)), position = "dodge") +
  facet_wrap(~var_long, scales = "free_y", labeller = label_parsed) +
  scale_fill_discrete("") +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA)
  ) +
  theme(
    legend.position = "bottom", axis.title = element_blank(),
    axis.text.x = element_blank()
  )
```

## Textures

```{r betterplot}
#| message: false
#| warning: false
#| fig-cap: "Soil texture for all sites, plots and depths."
par(bg = "grey10")
read_tsv("../environment/data/derived_data/soil.tsv") %>%
  ggplot(aes(x = sand, y = clay, z = silt, col = site)) +
  ggtern::coord_tern(L = "x", T = "y", R = "z") +
  geom_point() +
  labs(
    yarrow = "Clay [ % ]",
    zarrow = "Silt [ % ]",
    xarrow = "Sand [ % ]"
  ) +
  ggtern::theme_showarrows() +
  ggtern::theme_hidetitles() +
  ggtern::theme_clockwise() +
  scale_color_discrete("") +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA)
  )
```

## Co-variations

```{r pca}
#| message: false
#| warning: false
#| fig-cap: "Soil variables PCA per site and plot."
data <- read_tsv("../environment/data/derived_data/soil.tsv") %>%
  select(-X, -Y, -plot) %>%
  group_by(site) %>%
  filter(depth <= 15) %>%
  summarise_all(mean, na.omit = TRUE) %>%
  select(-ocs) %>%
  na.omit()
pca <- prcomp(data %>% select(-site, -depth), scale. = TRUE)
autoplot(pca,
  loadings = TRUE, loadings.label = TRUE,
  loadings.label.repel = TRUE,
  data = data, colour = "site"
) +
  scale_color_discrete("") +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA)
  )
```

## Correlations

```{r corr}
#| message: false
#| warning: false
#| fig-cap: "Soil variables pairwise correlations."
par(bg = "grey10")
read_tsv("../environment/data/derived_data/soil.tsv") %>%
  select(-X, -Y, -plot) %>%
  group_by(site) %>%
  filter(depth <= 15) %>%
  summarise_all(mean, na.omit = TRUE) %>%
  select(-ocs) %>%
  na.omit() %>%
  select(-site, -depth) %>%
  cor(use = "pairwise.complete.obs") %>%
  corrplot::corrplot(
    type = "upper", diag = FALSE,
    bg = "grey10", tl.col = "white"
  )
```

# Landscape

The European Commission’s Joint Research Centre developed a dataset on **forest cover change** in tropical moist forests [TMF](https://forobs.jrc.ec.europa.eu/TMF) using 42 years of Landsat time series at 0.09 ha resolution (**30m**) depicting disturbances (deforestation and degradation), and post-deforestation recovery (or forest regrowth) over the period 1990-2023 [@europeancommission.jointresearchcentre.2020].

## Trajectories

```{r allsites}
#| message: false
#| warning: false
#| fig-cap: "Forest cover through time."
read_tsv("../environment/data/derived_data/landscape.tsv") %>%
  na.omit() %>%
  ggplot(aes(year, 100 - intact, col = site, group = paste(site, plot))) +
  geom_line() +
  xlab("") +
  ylab("Deforested area in a radius of 1-km [ % ]") +
  facet_wrap(~site) +
  scale_color_discrete(guide = "none") +
  scale_y_sqrt() +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA)
  )
```

## Deforested

```{r deforested}
#| message: false
#| warning: false
#| fig-cap: "Deforested area in a radius of 1-km, %."
read_tsv("../environment/data/derived_data/landscape.tsv") %>%
  group_by(site, plot) %>%
  summarise(deforested = mean(100 - intact)) %>%
  ggplot(aes(site, deforested, fill = site, group = paste(site, plot))) +
  geom_col(position = "dodge") +
  xlab("") +
  ylab("Deforested area in a radius of 1-km [ % ]") +
  scale_fill_discrete(" ") +
  coord_flip() +
  scale_y_sqrt() +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA)
  )
```

# All environment

Climate, soil and landscape data gathered.

## Co-variations

```{r pcaall}
#| message: false
#| warning: false
#| fig-cap: "All variables PCA per site and plot."
data <- read_tsv("../environment/outputs/environment.tsv") %>%
  na.omit()
pca <- prcomp(data %>% select(-site, -plot, -longitude, -latitude),
  scale. = TRUE
)
autoplot(pca,
  loadings = TRUE, loadings.label = TRUE,
  loadings.label.repel = TRUE,
  data = data, colour = "site"
) +
  scale_color_discrete("") +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA)
  )
```

## Correlations

```{r corrall}
#| message: false
#| warning: false
#| fig-cap: "All variables pairwise correlations."
par(bg = "grey10")
read_tsv("../environment/outputs/environment.tsv") %>%
  select(-site, -plot, -longitude, -latitude) %>%
  cor(use = "pairwise.complete.obs") %>%
  corrplot::corrplot(
    type = "upper", diag = FALSE,
    bg = "grey10", tl.col = "white"
  )
```

# Species

**species** is a sub-project of the [**BioForest**](https://github.com/Bioforest-project) project aimed at species related data (correct names, functional traits, phylogeny) as part of the data preparation for data preparation within the project.

# Raw

Raw data taxonomic information based on family, genus, species, scientific names and vernacular names and manual cleaning of raw mistakes.

## Site

::: {style="font-size: 50%;"}
```{r stats}
#| message: false
#| warning: false
read_tsv("../species/data/derived_data/raw_taxo_preped_v2.tsv") %>%
  group_by(site) %>%
  summarise(
    family = length(unique(na.omit(family))),
    genus = length(unique(na.omit(genus))),
    species = length(unique(paste(genus, species))),
    scientific = length(unique(na.omit(scientific))),
    vernacular = length(unique(na.omit(vernacular)))
  ) %>%
  kable()
```
:::

## All

```{r totals}
#| message: false
#| warning: false
read_tsv("../species/data/derived_data/raw_taxo_preped_v2.tsv") %>%
  summarise(
    family = length(unique(na.omit(family))),
    genus = length(unique(na.omit(genus))),
    species = length(unique(paste(genus, species))),
    scientific = length(unique(na.omit(scientific))),
    vernacular = length(unique(na.omit(vernacular)))
  ) %>%
  kable(
    format.args = list(big.mark = ","),
    caption = "Total numbers per taxonomic levels."
  )
```

## Scientific

```{r diffs}
#| warning: false
#| message: false
#| fig-cap: Scientific names per genus species pairs.
read_tsv("../species/data/derived_data/raw_taxo_preped_v2.tsv") %>%
  mutate(species = paste(genus, species)) %>%
  select(species, scientific) %>%
  unique() %>%
  group_by(species) %>%
  summarise(N = n()) %>%
  filter(N > 1) %>%
  ggplot(aes(N)) +
  geom_histogram() +
  theme_bw() +
  scale_y_sqrt() +
  scale_x_sqrt() +
  xlab("Scientific names per genus species pairs") +
  ylab("") +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA)
  )
```

## Manual {.smaller}

```{r namecortab}
#| message: false
#| warning: false
read_tsv("../species/data/derived_data/corrected_taxo_v2.tsv") %>%
  select(family_reason, genus_reason, species_reason) %>%
  gather("level", "reason") %>%
  na.omit() %>%
  group_by(level, reason) %>%
  summarise(corrections = n()) %>%
  kable(
    format.args = list(big.mark = ","),
    caption = "Number of corrections per level and reason."
  )
```

# Cleaning

Automatic cleaning, synonymy and updating of taxonomy with [World Flora Online](https://www.worldfloraonline.org/).

## Match {.smaller}

```{r matches}
#| message: false
#| warning: false
read_tsv("../species/data/derived_data/wfo_out_v2.tsv") %>%
  group_by(spec.name) %>%
  summarise(matched = all(Matched)) %>%
  group_by(matched) %>%
  summarise(N = n(), names = ifelse(!matched, paste(spec.name), "")) %>%
  unique() %>%
  kable(
    format.args = list(big.mark = ","),
    caption = "Number of matched and unmatched species."
  )
```

## Non match

::: {style="font-size: 50%;"}
```{r manual_curration}
manual_curration <- data.frame(
  scientific_corrected = c(
    "Alseodaphne ceratoxylon",
    "Alseodaphne havilandii",
    "Balanites wilsoniana",
    "Brosimum obovata",
    "Chrysophyllum pachycarpa",
    "Fernandoa adolfi",
    "Handroanthus campestris",
    "Palaquium cochlariflorum"
  ),
  family_cleaned = c(
    "Lauraceae",
    "Lauraceae",
    "Moraceae",
    "Zygophyllaceae",
    "Sapotaceae",
    "Bignoniaceae",
    "Bignoniaceae",
    "Sapotaceae"
  ),
  genus_cleaned = c(
    "Alseodaphne",
    "Alseodaphne",
    "Brosimum",
    "Balanites",
    "Chrysophyllum",
    "Fernandoa",
    "Handroanthus",
    "Palaquium"
  ),
  species_cleaned = c(
    NA,
    NA,
    "acutifolium",
    "obovata",
    "lucentifolium",
    "adolfi-friderici",
    NA,
    "cochleariifolium"
  ),
  cleaning_type = "manual curration",
  cleaning_comment = c(
    "unknown species on wfo",
    "unknown species on wfo",
    "Brosimum acutifolium subsp.",
    "missing family in wfo subset",
    "Chrysophyllum lucentifolium subsp. pachycarpum",
    "issue with the - in species name",
    "unknown species on wfo",
    "very misspelled"
  )
)
kable(manual_curration)
```
:::

## Fuzzy match

```{r fuzzy_unique}
#| message: false
#| warning: false
read_tsv("../species/data/derived_data/wfo_out_v2.tsv") %>%
  filter(Matched) %>%
  group_by(spec.name) %>%
  summarise(fuzzy = all(Fuzzy), unique = all(Unique)) %>%
  group_by(fuzzy, unique) %>%
  summarise(N = n()) %>%
  mutate(
    fuzzy = ifelse(fuzzy, "fuzzy", "exact"),
    unique = ifelse(unique, "unique", "multiple")
  ) %>%
  pivot_wider(names_from = "unique", values_from = "N") %>%
  kable(
    format.args = list(big.mark = ","),
    caption = "Number of fuzzy and unique species."
  )
```

## Misspelling

```{r fuzzy_dist}
#| message: false
#| warning: false
read_tsv("../species/data/derived_data/wfo_out_v2.tsv") %>%
  filter(Matched, Fuzzy) %>%
  group_by(spec.name) %>%
  summarise(fuzzy_dist = unique(Fuzzy.dist)) %>%
  group_by(fuzzy_dist) %>%
  summarise(N = n()) %>%
  kable(caption = "Number of misspelled species by the number of misspelled letters.") # nolint
```

## Synonymy

::: {style="font-size: 50%;"}
```{r exact_multiple}
#| message: false
#| warning: false
read_tsv("../species/data/derived_data/wfo_out_v2.tsv") %>%
  filter(Matched, !Fuzzy, !Unique, New.accepted) %>%
  select(spec.name, scientificName) %>%
  unique() %>%
  group_by(spec.name) %>%
  filter(n() > 1) %>%
  summarise(scientificName = paste0(scientificName, collapse = ", ")) %>%
  kable(caption = "Exact match with multiple newly accepted names.")
```
:::

## Process

1.  Using closest correct spelling
2.  Accepting single exact matches
3.  Accepting single newly accepted names for multiple matches
4.  Accepting the first newly accepted names for multiple matches in case of multiples (to be changed later)
5.  Using manual curation for species not matched

## Result

Number of synonymy, misspelling, and update corrections per taxonomic level for a final total of 2,060 species.

```{r wfo_clean_stat}
#| message: false
clean <- read_tsv("../species/outputs/taxonomy_v2.tsv")
fam_cor <- select(clean, family_corrected, family_cleaned) %>%
  unique() %>%
  na.omit() %>%
  filter(family_corrected != family_cleaned)
gen_cor <- select(clean, genus_corrected, genus_cleaned) %>%
  unique() %>%
  na.omit() %>%
  filter(genus_corrected != genus_cleaned)
sp_cor <- select(clean, species_corrected, species_cleaned) %>%
  unique() %>%
  na.omit() %>%
  filter(species_corrected != species_cleaned)
data.frame(
  level = c("family", "genus", "species"),
  N = c(nrow(fam_cor), nrow(gen_cor), nrow(sp_cor))
) %>%
  kable() # nolint
```

# Phylogeny

Phylogenetic tree using the backbone phylogeny of two recently published mega-trees [@smith2018] [@zanne2013] using the `V.PhyloMaker` [@jin2019].

## All

```{r phyloall}
#| fig-width: 12
#| fig-height: 6
#| message: false
#| warning: false
#| fig-cap: "Global phylogeny of species across all sites."
splist <- read_tsv("../species/outputs/taxonomy_v2.tsv") %>%
  select(species_cleaned, genus_cleaned, family_cleaned) %>%
  na.omit() %>%
  unique() %>%
  rename_all(~ gsub("_cleaned", "", .)) %>%
  mutate(species = paste(genus, species))
phylo <- ape::read.tree("../species/outputs/phylogeny_v2.tree")
phylo_df <- phylo4d(
  phylo,
  data.frame(species = gsub("_", " ", phylo$tip.label)) %>%
    left_join(splist)
)
ggtree(phylo_df, aes(col = family), layout = "circular") +
  theme_tree(legend.text = element_text(face = "italic", size = 6)) +
  scale_color_discrete("")
```

## Misiones

```{r phylomisiones}
#| message: false
#| warning: false
#| fig-cap: "Global phylogeny of species with Misiones species in green."
taxo <- read_tsv("../species/outputs/taxonomy_v2.tsv") %>%
  filter(site == "Misiones") %>%
  select(species_cleaned, genus_cleaned, family_cleaned) %>%
  na.omit() %>%
  unique() %>%
  rename_all(~ gsub("_cleaned", "", .)) %>%
  mutate(species = paste(genus, species))
phylo_df@data$site <- phylo_df@data$species %in% taxo$species
ggtree(phylo_df, aes(col = site, alpha = site), layout = "circular") +
  scale_color_manual(
    guide = "none",
    values = c("grey", "darkgreen", "grey")
  ) +
  scale_alpha_manual(
    guide = "none",
    values = c(.1, 1, .1)
  )
```

# Functional

Functional trait data from TRY [@kattge2019] and TALLO [@jucker2022] and their imputation using predictive mean matching.

## TRY Coverage

```{r try_sp_traits}
#| message: false
#| warning: false
#| fig-cap: "Traits available for at least 50% of species available on TRY."
list.files("../species/data/derived_data/try_req/", full.names = TRUE) %>%
  lapply(read_tsv, skip = 3) %>%
  lapply(gather, species, N, -Trait, -TraitID) %>%
  bind_rows() %>%
  filter(N > 0) %>%
  group_by(Trait, TraitID) %>%
  summarise(N = n()) %>%
  filter(N > 0.4 * 1901) %>%
  ggplot(aes(fct_rev(fct_infreq(Trait, N)), N)) +
  geom_point() +
  coord_flip() +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    axis.title = element_blank()
  )
```

## TRY WD

```{r trywd}
#| message: false
#| warning: false
#| fig-cap: "Wood density extracted from @kattge2019."
traits <- read_tsv("../species/outputs/traits_v2.tsv") %>%
  select(scientific_cleaned, trait, trait_value_raw) %>%
  pivot_wider(names_from = trait, values_from = trait_value_raw)
taxo <- read_tsv("../species/outputs/taxonomy_v2.tsv") %>%
  select(site, scientific_cleaned) %>%
  na.omit() %>%
  left_join(traits)
g1 <- ggplot(taxo, aes(WD, col = site)) +
  geom_density() +
  xlab(expression("Wood Density [" ~ g / cm^3 ~ "]")) +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA),
    legend.key.size = unit(0.01, "npc")
  )
g2 <- ggplot(taxo, aes(site, WD, col = site)) +
  geom_violin() +
  geom_boxplot(width = .2) +
  coord_flip() +
  ylab(expression("Wood Density [" ~ g / cm^3 ~ "]")) +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.position = "none",
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank()
  )
cowplot::plot_grid(g1, g2, nrow = 2)
```

## TRY SLA

```{r trysla}
#| message: false
#| warning: false
#| fig-cap: "Specific leaf area extracted from @kattge2019."
g1 <- ggplot(taxo, aes(SLA, col = site)) +
  geom_density() +
  scale_x_log10() +
  xlab(expression("Specific Leaf Area [" ~ mm^2 ~ mg^{
    -1
  } ~ "]")) +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA),
    legend.key.size = unit(0.01, "npc")
  )
g2 <- ggplot(taxo, aes(site, SLA, col = site)) +
  geom_violin() +
  geom_boxplot(width = .2) +
  coord_flip() +
  scale_y_log10() +
  ylab(expression("Specific Leaf Area [" ~ mm^2 ~ mg^{
    -1
  } ~ "]")) +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.position = "none",
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank()
  )
cowplot::plot_grid(g1, g2, nrow = 2)
```

## TRY LA

```{r tryla}
#| message: false
#| warning: false
#| fig-cap: "Leaf area extracted from @kattge2019."
g1 <- ggplot(taxo, aes(LA, col = site)) +
  geom_density() +
  xlab(expression("Leaf Area [" ~ mm^2 ~ "]")) +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA),
    legend.key.size = unit(0.01, "npc")
  )
g2 <- ggplot(taxo, aes(site, LA, col = site)) +
  geom_violin() +
  geom_boxplot(width = .2) +
  coord_flip() +
  ylab(expression("Leaf Area [" ~ mm^2 ~ "]")) +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.position = "none",
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank()
  )
cowplot::plot_grid(g1, g2, nrow = 2)
```

## TRY N

```{r tryn}
#| message: false
#| warning: false
#| fig-cap: "Leaf nitrogen extracted from @kattge2019."
g1 <- ggplot(taxo, aes(N, col = site)) +
  geom_density() +
  xlab(expression("Nitrogen [" ~ mg / g ~ "]")) +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA),
    legend.key.size = unit(0.01, "npc")
  )
g2 <- ggplot(taxo, aes(site, N, col = site)) +
  geom_violin() +
  geom_boxplot(width = .2) +
  coord_flip() +
  ylab(expression("Nitrogen [" ~ mg / g ~ "]")) +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.position = "none",
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank()
  )
cowplot::plot_grid(g1, g2, nrow = 2)
```

## TALLO data

```{r tallo}
#| warning: false
#| message: false
#| fig-cap: "Height-diameter relation for species of our datasets in TALLO."
tallo <- read_tsv("../species/outputs/taxonomy_v2.tsv") %>%
  select(scientific_cleaned) %>%
  na.omit() %>%
  unique() %>%
  left_join(read_csv("../species/data/raw_data/Tallo.csv?download=1"),
    by = c("scientific_cleaned" = "species")
  ) %>%
  filter(!is.na(tree_id))
tallo %>%
  ggplot(aes(stem_diameter_cm, height_m)) +
  geom_point(aes(col = scientific_cleaned), alpha = 0.25) +
  geom_smooth(formula = y ~ log(x)) +
  scale_color_discrete(guide = "none") +
  xlab("diameter (cm)") +
  ylab("height (m)") +
  ggtitle("TALLO", paste(length(unique(tallo$scientific_cleaned)), "species")) +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA)
  )
```

## TALLO model

$$
\begin{array}{c} 
log(height) \sim N [ log(h_{max,s} \times \frac{dbh}{a_{h,s}+dbh^2}), \sigma^2] \\
h_{max,s} \sim N (h_{max}, \sigma_h^2) \\
a_{h,s} \sim N (a_{h}, \sigma_a^2)
\end{array}
$$

## TALLO sites

```{r ahhmax}
#| message: false
#| warning: false
#| fig-cap: "Inferred species allometric parameters hmax and ah and their relations per site." #nolint
read_tsv("../species/outputs/taxonomy_v2.tsv") %>%
  left_join(read_tsv("../species/data/derived_data/tallo_pars.tsv")) %>%
  filter(!is.na(ah)) %>%
  ggplot(aes(ah, hmax)) +
  geom_point() +
  facet_wrap(~site) +
  xlab(expression(a[h])) +
  ylab(expression(h[max])) +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA)
  )
```

## TALLO hmax

```{r hmaxsite}
#| message: false
#| warning: false
#| fig-cap: "Inferred species allometric parameters hmax per site."
g1 <- ggplot(taxo, aes(hmax, col = site)) +
  geom_density() +
  xlab(expression(h[max] ~ "[" ~ m ~ "]")) +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA),
    legend.key.size = unit(0.01, "npc")
  )
g2 <- ggplot(taxo, aes(site, hmax, col = site)) +
  geom_violin() +
  geom_boxplot(width = .2) +
  coord_flip() +
  ylab(expression(h[max] ~ "[" ~ m ~ "]")) +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.position = "none",
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank()
  )
cowplot::plot_grid(g1, g2, nrow = 2)
```

## Correlations

```{r all_traits}
#| warning: false
#| message: false
#| fig-cap: Species traits pairwise correlations.
par(bg = "grey10")
taxo %>%
  select(WD, hmax, SLA, LA, N) %>%
  cor(use = "pairwise.complete.obs") %>%
  corrplot::corrplot(
    type = "upper", diag = FALSE,
    bg = "grey10", tl.col = "white"
  )
```

## Count {.smaller}

::: {style="font-size: 60%;"}
```{r traitcount}
taxo %>%
  gather(trait, value, -site, -scientific_cleaned) %>%
  na.omit() %>%
  group_by(site, trait, scientific_cleaned) %>%
  summarise(mean = mean(value)) %>%
  group_by(site, trait) %>%
  summarise(n = n()) %>%
  pivot_wider(names_from = trait, values_from = n) %>%
  kable()
```
:::

## Imputation

```{r pcatraits}
#| message: false
#| warning: false
#| fig-cap: Imputed traits global principal component analysis.
imputed <- read_tsv("../species/data/derived_data/imputed_traits.tsv")
autoplot(
  princomp(select(imputed, wd, hmax, sla, la, n) %>%
             mutate(sla = log(sla), la = log(la)), cor = TRUE),
  data = imputed, alpha = 0.25, col = "lightgrey",
  loadings.label.size = 6,
  loadings.label.colour = "red", loadings.label.vjust = 1.1,
  loadings.label.repel = TRUE,
  loadings = TRUE, loadings.label = TRUE, loadings.colour = "red"
) +
  geom_hline(aes(yintercept = 0), col = "black", linetype = "dotted") +
  geom_vline(aes(xintercept = 0), col = "black", linetype = "dotted") +
  geom_density_2d_filled(alpha = .5) +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA),
    legend.position = "none"
  )
```

## Imputation site

```{r pcasite}
#| message: false
#| warning: false
#| fig-cap: Imputed traits global principal component analysis per site.
traits <- read_tsv("../species/outputs/traits_v2.tsv") %>%
  select(scientific_cleaned, trait, trait_value_imputed) %>%
  pivot_wider(names_from = trait, values_from = trait_value_imputed)
taxo <- read_tsv("../species/outputs/taxonomy_v2.tsv") %>%
  select(site, scientific_cleaned) %>%
  na.omit() %>%
  left_join(traits)
autoplot(
  princomp(select(taxo, WD, hmax, SLA, LA, N) %>%
             mutate(sla = log(SLA), la = log(LA)), cor = TRUE),
  data = taxo, alpha = 0.25
) +
  geom_hline(aes(yintercept = 0), col = "black", linetype = "dotted") +
  geom_vline(aes(xintercept = 0), col = "black", linetype = "dotted") +
  facet_wrap(~site) +
  geom_density_2d_filled(alpha = .5) +
  theme(legend.position = "none") +
  dark_theme_gray() +
  theme(
    plot.background = element_rect(fill = "grey10", color = NA),
    legend.background = element_rect(fill = "grey10", color = NA),
    legend.position = "none"
  )
```

# References

::: {#refs}
:::
